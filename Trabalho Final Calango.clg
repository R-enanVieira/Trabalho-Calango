algoritmo avalie_e_ganhe;
// Síntese
//  Objetivo:	   A pessoa participará de uma dinamica de avalições de produtos que poderá ou não ser remunerada
				// O valor que ela irá receber depende do quão próximo vão estar as notas atribuidas aos serviços por ela com a dos outros participantes, que nesse caso será o computador.
				// E, por fim, mostrará um rank dos produtos mais bem avaliados pelo computador e pela pessoa e o valor que ela receberá
				
//  Entrada :	   Números inteiro representando as notas que a pessoa irá dar

//  Saída   :      Rank dos serviços e valor a receber pela pessoa 


principal
	// Declarações
	inteiro i, j, aux_n, preferencia, notas_usuario[5], notas_computador[5], servico_escolhido;
	texto  aux_s, servicos_streaming_videos[5], servicos_streaming_musica[5], servicos_streaming_jogos[5], rank[5];
	texto servicos_streaming_videos_c[5], servicos_streaming_musica_c[5], servicos_streaming_jogos_c[5];
	logico validador, prosseguir;

	// Instruções
	validador = falso;
	prosseguir = verdadeiro;
	
	//base de dados usuario
	servicos_streaming_videos[0] = "Amazon Prime";
	servicos_streaming_videos[1] = "Netflix     ";
	servicos_streaming_videos[2] = "Crunchyroll ";
	servicos_streaming_videos[3] = "Globoplay   ";
	servicos_streaming_videos[4] = "Disney+     ";

	servicos_streaming_musica[0] = "YouTube Music";
	servicos_streaming_musica[1] = "Deezer       ";
	servicos_streaming_musica[2] = "Amazon Music ";
	servicos_streaming_musica[3] = "Spotfy       ";
	servicos_streaming_musica[4] = "Apple Music  ";

	servicos_streaming_jogos[0] = "GosuGamers";
	servicos_streaming_jogos[1] = "Cube TV   ";
	servicos_streaming_jogos[2] = "Afreeca TV";
	servicos_streaming_jogos[3] = "Twitch    ";
	servicos_streaming_jogos[4] = "Nimo TV   ";

	//base de dados computador
	servicos_streaming_videos_c[0] = "Amazon Prime";
	servicos_streaming_videos_c[1] = "Netflix     ";
	servicos_streaming_videos_c[2] = "Crunchyroll ";
	servicos_streaming_videos_c[3] = "Globoplay   ";
	servicos_streaming_videos_c[4] = "Disney+     ";

	servicos_streaming_musica_c[0] = "YouTube Music";
	servicos_streaming_musica_c[1] = "Deezer       ";
	servicos_streaming_musica_c[2] = "Amazon Music ";
	servicos_streaming_musica_c[3] = "Spotfy       ";
	servicos_streaming_musica_c[4] = "Apple Music  ";

	servicos_streaming_jogos_c[0] = "GosuGamers";
	servicos_streaming_jogos_c[1] = "Cube TV   ";
	servicos_streaming_jogos_c[2] = "Afreeca TV";
	servicos_streaming_jogos_c[3] = "Twitch    ";
	servicos_streaming_jogos_c[4] = "Nimo TV   ";

	//Rank (estética)
	rank[0] = "1º. ";
	rank[1] = "2º. ";
	rank[2] = "3º. ";
	rank[3] = "4º. ";
	rank[4] = "5º. ";

	faca 
		prosseguir = verdadeiro;
		
		escreval("			BEM VINDO!! VOCÊ PARTICIPARÁ DE UMA DINÂMICA NA QUAL AVALIARÁ SERVIÇOS DE STREAMING E PODERÁ FATURAR UMA GRANA $$$");
		escreval("");
		escreval("PARA INICIAR ESCOLHA UM TIPO DE SERVIÇO COM O QUAL POSSUI MAIOR AFINIDADE:	(1) SERVIÇOS DE STREAMING DE FILMES, SERIES, DESENHOS E ANIMES ");
		escreval("									(2) SERVIÇOS DE STREAMING DE MUSICA E PODCAST");
		escreval("									(3) SERVIÇOS DE STREAMING DE JOGOS");
		leia(preferencia);
		limpaTela();
	
		//looping de dados incorretos inserido pelo usuario para rodar até ele colocar algo válido 
		enquanto (preferencia != 1 e preferencia != 2 e preferencia != 3) faca
			escreval("				DADOS INCORRETOS!! POR FAVOR SELECIONE UMA DAS TRÊS ALTERNATIVAS DIGITANDO UM DOS NÚMEROS: 1, 2 OU 3. ");
			escreval("");
			escreval("PARA INICIAR ESCOLHA UM TIPO DE SERVIÇO COM O QUAL POSSUI MAIOR AFINIDADE:	(1) SERVIÇOS DE STREAMING DE FILMES, SERIES, DESENHOS E ANIMES ");
			escreval("									(2) SERVIÇOS DE STREAMING DE MUSICA E PODCAST");
			escreval("									(3) SERVIÇOS DE STREAMING DE JOGOS");
			leia(preferencia);
			limpaTela();
		fimEnquanto
	
		//mostrar na tela os serviços escolhido pela pessoa e ler as notas atribuidas por ela
		se (preferencia == 1) entao
			escreval("Dê uma nota de 0 a 10. Sendo 0 para horrivel e 10 para excelente.");
			escreval("");
			para (i de 0 ate 4 passo 1 ) faca
				escreva(servicos_streaming_videos[i] + ": ");
				leia(notas_usuario[i]);
			fimPara
			servico_escolhido = 1;
			limpaTela();
		senao
			se (preferencia == 2) entao
				escreval("Dê uma nota de 0 a 10. Sendo 0 para horrivel e 10 para excelente.");
				escreval("");
				para (i de 0 ate 4 passo 1 ) faca
					escreva(servicos_streaming_musica[i] + ": ");
					leia(notas_usuario[i]);
				fimPara
				servico_escolhido = 2;
				limpaTela();
			senao
				se (preferencia == 3) entao
					escreval("Dê uma nota de 0 a 10. Sendo 0 para horrivel e 10 para excelente.");
					escreval("");
					para (i de 0 ate 4 passo 1 ) faca
						escreva(servicos_streaming_jogos[i] + ": ");
						leia(notas_usuario[i]);
					fimPara
					servico_escolhido = 3;
					limpaTela();
				fimSe
			fimSe
		fimSe
	
		//verificar se as notas são validas para o programa prosseguir
		para (i de 0 ate 4 passo 1 ) faca
			validador = notas_usuario[i] < 0 ou notas_usuario[i] > 10;
			se (validador == verdadeiro) entao
				prosseguir = falso;
				interrompa;
			fimSe
		fimPara
		se (prosseguir == verdadeiro) entao
			//média das notas dos "outros participantes" da dinamica/pesquisa
			para (i de 0 ate 4 passo 1 ) faca
				notas_computador[i] = aleatorio(10);
			fimPara
		
			//montando os rank com base na nota do usuario 
			para (i de 0 ate 4 passo 1 ) faca
				para (j de i+1 ate 4 passo 1 ) faca
					se (notas_usuario[j] > notas_usuario[i]) entao
						aux_n = notas_usuario[j];
						notas_usuario[j] = notas_usuario[i];
						notas_usuario[i] = aux_n;
						escolha(servico_escolhido)
							caso 1
								aux_s = servicos_streaming_videos[j];
								servicos_streaming_videos[j] = servicos_streaming_videos[i];
								servicos_streaming_videos[i] = aux_s;
								interrompa;
							caso 2
								aux_s = servicos_streaming_musica[j];
								servicos_streaming_musica[j] = servicos_streaming_musica[i];
								servicos_streaming_musica[i] = aux_s;
								interrompa;
							caso 3
								aux_s = servicos_streaming_jogos[j];
								servicos_streaming_jogos[j] = servicos_streaming_jogos[i];
								servicos_streaming_jogos[i] = aux_s;
								interrompa;
						fimEscolha
					fimSe
				fimPara
			fimPara
		
			//rankeando notas do público(computador)
			para (i de 0 ate 4 passo 1 ) faca
				para (j de i+1 ate 4 passo 1 ) faca
					se (notas_computador[j] > notas_computador[i]) entao
						aux_n = notas_computador[j];
						notas_computador[j] = notas_computador[i];
						notas_computador[i] = aux_n;
						escolha(servico_escolhido)
							caso 1
								aux_s = servicos_streaming_videos_c[j];
								servicos_streaming_videos_c[j] = servicos_streaming_videos_c[i];
								servicos_streaming_videos_c[i] = aux_s;
								interrompa;
							caso 2
								aux_s = servicos_streaming_musica_c[j];
								servicos_streaming_musica_c[j] = servicos_streaming_musica_c[i];
								servicos_streaming_musica_c[i] = aux_s;
								interrompa;
							caso 3
								aux_s = servicos_streaming_jogos_c[j];
								servicos_streaming_jogos_c[j] = servicos_streaming_jogos_c[i];
								servicos_streaming_jogos_c[i] = aux_s;
								interrompa;
						fimEscolha
					fimSe
				fimPara
			fimPara	
			
			escreval("RANK COM BASE NAS SUAS NOTAS										RANK COM BASE NAS NOTAS DO PÚBLICO");
			para (i de 0 ate 4 passo 1 ) faca
				escolha(servico_escolhido)
					caso 1
						escreval(rank[i], servicos_streaming_videos[i],  " -> ", notas_usuario[i], "												", rank[i], servicos_streaming_videos_c[i],  " -> ", notas_computador[i]);
						interrompa;
					caso 2
						escreval(rank[i], servicos_streaming_musica[i],  " -> ", notas_usuario[i], "												", rank[i], servicos_streaming_musica_c[i],  " -> ", notas_computador[i]);
						interrompa;
					caso 3
						escreval(rank[i], servicos_streaming_jogos[i],  " -> ", notas_usuario[i], "												", rank[i], servicos_streaming_jogos_c[i],  " -> ", notas_usuario[i]);
						interrompa;
				fimEscolha
			fimPara
		
			escreval("");
			escreval("O VALOR QUE VOCÊ CONSEGUIU FAZER COM SUAS AVAIAÇÕES FOI DE: R$", valor_ganho(notas_usuario, notas_computador)::2);
		senao
			escreval("---------------------VOCÊ ATRIBUIU NOTAS NEGATIVAS OU MAIORES QUE 10! LEMBRE-SE DE ATRIBUIR NOTAS VÁLIDAS ENTRE 0 E 10 PARA O PROGRAMA PROSSEGUIR.---------------------");
			escreval("");
		fimSe
	enquanto(prosseguir == falso);
	
fimPrincipal

funcao real valor_ganho (inteiro notas_u[], inteiro notas_c[])
	inteiro i;
	real calculo_valor_ganho;
	
	calculo_valor_ganho = 10;
	
	para (i de 0 ate 4 passo 1 ) faca
		se (notas_u[i] == notas_c[i]) entao
			calculo_valor_ganho = calculo_valor_ganho*1.5;
		senao
			se (notas_u[i] == notas_c[i]+1 ou notas_u[i] == notas_c[i]+2 ou notas_u[i] == notas_c[i]-1 ou notas_u[i] == notas_c[i]-2) entao
				calculo_valor_ganho = calculo_valor_ganho*1.4;
			senao
				se (notas_u[i] == notas_c[i]+3 ou notas_u[i] == notas_c[i]+4 ou notas_u[i] == notas_c[i]-3 ou notas_u[i] == notas_c[i]-4 ) entao
					calculo_valor_ganho = calculo_valor_ganho*1.3;
				senao
					se (notas_u[i] == notas_c[i]+5 ou notas_u[i] == notas_c[i]+6 ou notas_u[i] == notas_c[i]-5 ou notas_u[i] == notas_c[i]-6) entao
						calculo_valor_ganho = calculo_valor_ganho*1.2;
					senao
						se (notas_u[i] == notas_c[i]+7 ou notas_u[i] == notas_c[i]+8 ou notas_u[i] == notas_c[i]+9 ou notas_u[i] == notas_c[i]-7 ou notas_u[i] == notas_c[i]-8 ou notas_u[i] == notas_c[i]+9) entao
							calculo_valor_ganho = calculo_valor_ganho*1.1;
						fimSe
					fimSe
				fimSe
			fimSe
		fimSe
	fimPara

	retorna calculo_valor_ganho;
	
fimFuncao
